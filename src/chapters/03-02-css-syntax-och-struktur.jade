.page-header
  h2 CSS Syntax
p För att enklare förstå hur CSS hanteras, föreställ dig att webbläsaren består av två ninjateams. Det första ninjateamet läser HTML-filen och skriver ut en massa text, bilder, listor, tabeller och länkar på skärmen. När första teamet hittar en referens till en CSS-fil, skickar de det till det andra ninjateamet. Det andra ninjateamet går då lös med färgkritor och klipper och klistrar tills allt ser snyggt ut.

p Även om ovanstående exempel är orimligt oseriöst är poängen att rendering av en webbsida (metaforiskt) sker i olika "pass". Där det första är att få ut resultatet av HTML:en på skärmen, och det andra att visuellt ändra på resultatet av HTML:en enligt det som definierats i CSS-filen. Du kommer upptäcka att det finns fler "pass" (och att ordningen kan variera) när vi kommer till JavaScript, men det lämnar vi för nu.

p Varför är det då viktigt att förstå att CSS kommer i det "andra passet"? Jo, eftersom det är viktigt att förstå att CSS <em>appliceras</em> på ett befintligt dokument. Med andra ord, ett CSS-dokument är i sig helt meningslöst. Eftersom ett CSS-dokument då appliceras på ett HTML-dokument så måste varje CSS-regel veta <em>vad</em> den ska appliceras på. Och det är här <code>selectors</code> kommer in i bilden. Låt oss se till ett exempel.

blockquote En css-<code>selector</code> definierar vilka html-<code>element</code> som ska påverkas av en viss effekt.

.panel.panel-default
  .panel-heading CSS-selector för HTML-element
  .panel-body
    p index.html
    pre.line-numbers
      code.language-markup
        | &lt;!DOCTYPE html&gt;
        | &lt;html&gt;
        |   &lt;head&gt;
        |     &lt;title&gt;The morning&lt;/title&gt;
        |     &lt;link rel="stylesheet" href="main.css"&gt;
        |   &lt;/head&gt;
        |   &lt;body&gt;
        |     &lt;p&gt;As Gregor Samsa awoke one morning from uneasy dreams [..]&lt;/p&gt;
        |   &lt;/body&gt;
        | &lt;/html&gt;
    p main.css
    pre.line-numbers
      code.language-css
        | body{
        |   background-color: lightblue;
        | }
        | p{
        |   color: #ffffff;
        | }
    p Resultat
    .panel.panel-default
      .panel-body(style="background-color:lightblue; color:#ffffff;padding-top:23px;")
        p As Gregor Samsa awoke one morning from uneasy dreams [..]

p Hur ska vi nu tänka kring det här? De viktigaste sakerna att poängtera är:
ul
  li <em>Rad 5</em> i html-dokumentet är det som gör att det som säger åt HTML-ninjorna att de behöver hämta CSS-ninjorna och att de ska läsa filen <code>main.css</code>.
  li <em>Rad 1</em> i css-dokumentet är en <code>selector</code> vars <code>target</code> är <code>&lt;body&gt;</code>-elementet. Det betyder att allt mellan följande <a href="http://en.wikipedia.org/wiki/Bracket#Curly_brackets_or_braces_.7B_.7D" target="_blank">måsvingar</a> (<code>{...}</code>) kommer att appliceras på <em>alla</em> <code>&lt;body&gt;</code>-element i html-dokumentet. Nu bör det ju förstås bara finnas ett body-element men förhoppningsvis har du redan förstått att vi hade kunnat välja vilket annat html-element som helst.
  li <em>Rad 2 och 5</em> i css-dokumentet är faktiskt css-<code>deklarationer</code>. Det är de som således bestämmer vilken visuell effekt som ska appliceras på just den selector vi definierat.

blockquote En css-<code>selector</code> kan vara vilket html-<code>element</code> som helst.

p Låt oss se det rent generellt. Syntaxen är alltså som följande.
.panel.panel-default
  .panel-heading CSS-syntax uttryckt generellt
  .panel-body
    pre.line-numbers
      code.language-css
        | css-selector{
        |   declaration-property: declaration-value;
        | }

p Så, låt oss uttrycka syntaxen för <code>deklarationer</code> i ord: En css-<code>deklaration</code> består av en <code>egenskap</code> (även kallat: property, nyckel, key), följt av ett kolon (<code>&#58;</code>) som fungerar som en avgränsare mellan nyckeln och värdet. Vidare följt av det faktiska <code>värdet</code> (som kan ges i en mängd olika format, såsom exempelvis <code>left</code>, <code>-32px</code>, <code>233%</code> eller <code>light</code>, beroende på vilken egenskap vi sätter värdet för). Slutligen anger vi ett semikolon (<code>&#59;</code>) för att terminera raden. Det sistnämnda gör det möjligt att skriva flera deklarationer på samma rad (vilket dock oftast gör filen väldigt svårläslig).

blockquote En css-<code>deklaration</code> består av en <code>property</code> (även kallat: nyckel, key, egenskap), ett kolon (<code>&#58;</code>), ett <code>värde</code> och slutligen ett semikolon (<code>&#59;</code>).






h3 Exempel på selectors genom klass och ID
p Utöver att skriva css-selectors som träffar html-element så kan vi även skriva selectors för <code>ID</code>:n och <code>klasser</code>.
p Vi använder ID:n för att defineira "unika" element. Vad menar vi med unika? Jo att om någonting har id:et <code>container</code> så får det endast finnas ett enda element på sidan som har just det ID:et. Vi kan självklart skriva flera css-regler som använder just den selectorn. Men i html-dokumentet får ID:t alltså endast förekomma en enda gång.

p Behöver vi kunna referera till flera element så använder vi oss av klasser. Klasser fungerar på exakt samma sätt som ID:n förutom just det att det är tillåtet att flera element använder samma klass.

p Enklast är nog att som vanligt se till ett exempel över hur detta fungerar.

.panel.panel-default
  .panel-heading Klasser och ID:n
  .panel-body
    p index.html
    pre.line-numbers
      code.language-markup
        | ...
        | &lt;p class="redish"&gt;As Gregor Samsa awoke one morning&lt;/p&gt;
        | &lt;p id="blueish"&gt;from uneasy dreams&lt;/p&gt;
        | &lt;p&gt;he found himself transformed in his bed&lt;/p&gt;
        | &lt;p class="redish"&gt;into a monstrous vermin.&lt;/p&gt;
        | ...
    p main.css
    pre.line-numbers
      code.language-css
        | p{
        |   color: orange;
        | }
        | .redish{
        |   color: red;
        | }
        | #blueish{
        |   color: blue;
        | }
    p Resultat
    .panel.panel-default
      .panel-body
        p(style="color:red;") As Gregor Samsa awoke one morning
        p(style="color:blue;") from uneasy dreams
        p(style="color:orange;") he found himself transformed in his bed
        p(style="color:red;") into a monstrous vermin.

// TODO: This really needs more flesh when it comes to selectors
// There is yet nothing about pseudo elements, nesting nor siblings or