.page-header
  h2 Funktioner

p Nu börjar vi närma oss de signifikant mer intressanta delarna av programmering. Funktioner! Funktioner i programmering kan med fördel jämföras med funktioner i matematik. En funktion är som en maskin. En maskin där du kan stoppa in ett ting och få ut ett annat ting. Alltså en funktion (<code>F</code>) som tar emot ett ting (<code>x</code>) och returnerar ett annat ting (<code>y</code>), där detta andra ting, i matematik, kan uttryckas som en funktion applicerad på det första (<code>F(x)</code>).
p PS. Vänligen anmäl oss inte till Högeskoleverket om det skulle vara så att våra matematiska metaforer är inkorrekta. Vi försöker bara använda de här för att skapa en förståelse.
p Innan vi fortsätter prata om hur funktioner fungerar, låt oss se till ett exempel.
.panel.panel-default
    .panel-heading Funktionsdefinition
    .panel-body
        pre
            code.language-javascript
                | var addition = function(x, y){
                |   return x + y;
                | }
        p Ovan definerar vi en funktion, som vi namnger <code>addition</code>, och som returnerar resultatet av en addition av dess två parametrar. Motsvarande funktion skulle matematiskt kunna uttryckas:
        pre
            | F(x, y) = x + y

p Vi har nu sett hur man definierar en funktion. Men hur använder vi den då? Låt oss återigen se till några exempel.
.panel.panel-default
    .panel-heading Funktionsanrop
    .panel-body
        pre
            code.language-javascript
                | // Först definierar vi en funktion
                | var addition = function(x, y){
                |   return x + y;
                | }
                | 
                | // Sen anropar vi funktionen
                | addition(1, 1);                         // =&gt; 2
                | addition(30, 5);                        // =&gt; 35
                | addition(addition(1,2), 4)              // =&gt; 7
                | addition(addition(1,addition(1,1)), 4)  // =&gt; 7
        p Låt oss uttrycka samma sak i matematik för att skapa ytterligare förståelse för vad vi gör:
        pre
            code
                | Först definierar vi funktionen...
                | F(x, y) = x + y
                | 
                | Sen använder vi den...
                |          F(1, 1) = 2
                |         F(30, 5) = 35
                |     F(F(1,2), 4) = 7
                | F(F(1,F(1,1), 4) = 7
p Notera alltså att vi kan skicka resultatet av en funktion som parameter (input) till en annan funktion. Precis som i matematik så måste den innersta beräkningen utföras först innan vi kan utföra den yttre.
blockquote Precis som i matematik behöver det innersta uttrycket räknas ut först innan vi kan fortsätta "utåt".


h3 Olika sätt att deklarera funktioner
p Eftersom JavaScript på gott och ont är väldigt flexibelt finns det olika sätt att deklarera funktioner.

h4 Function statement
p Detta är det klassiska sättet att deklarera funktioner i JavaScript.
pre
    code.language-javascript
        | function myFunc(){ //work };
p Denna metod gör att funktionsnamnet är tillgängligt i hela sitt scope. Även innan den är deklarerad.
pre
    code.language-javascript
        | console.log(myFunc());  // => Hello
        | function myFunc(){ return "Hello" };

h4 Function expression
p Detta sätt att deklarera kan ses som att vi tilldelar en anonym funktion till en variabel.
pre
    code.language-javascript
        | var myFunc = function(){ //work };
p När vi deklarerar en funktion så här så är den inte tillgänglig före deklarationen, endast efter.
pre
    code.language-javascript
        | console.log(myFunc()); // => TypeError
        | var myFunc = function(){ return "Hello" };



h4 Kombination
p Vi kan även kombinera ovan två metoder som så:
pre
    code.language-javascript
        | var myFunc = function myFunc(){ // work };

h4 Vilket sätt bör vi använda?
p Så, istället för att gräva ned oss i vilket sätt man bör använda så föreslår vi att du följer <a href="http://www.unicodegirl.com/function-statement-versus-function-expression.html">Douglas Crockford's rekommendation</a> om att använda function expressions. Alltså:
pre
    code.language-javascript
        | var myFunc = function(){ //work };

blockquote.text-info
    | Välj function expressions över function statements, tills den dag kommer du då intresserar dig av att lära dig varför.

